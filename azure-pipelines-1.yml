# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f44a91ad-de08-4b15-809c-dfe565afdc64'
  imageRepository: 'artist'
  containerRegistry: 'hdmspotifyacr.azurecr.io'
  k8sPath: k8
  dockerfilePath: '**/mvp/Dockerfile_artist'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'hdmspotifyacrb572-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - mvp/artists
      - k8

resources:
- repo: self



stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - publish: $(k8sPath)
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'FelixBieswangerBigData20Spotify'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                ../manifests/artists.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

