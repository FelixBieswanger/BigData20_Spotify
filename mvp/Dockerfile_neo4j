FROM neo4j:4.0.3-enterprise

ADD /plugins /plugins

ENV NEO4J_ACCEPT_LICENSE_AGREEMENT yes
ENV NEO4J_AUTH neo4j/test
ENV NEO4J_ACCEPT_LICENSE_AGREEMENT "yes"
ENV NEO4J_AUTH neo4j/streams
ENV NEO4J_dbms_connector_http_listen__address :7474
ENV NEO4J_dbms_connector_https_listen__address  :6477
ENV NEO4J_dbms_connector_bolt_listen__address :7687
ENV NEO4J_dbms_logs_debug_level DEBUG
ENV NEO4J_apoc_import_file_enabled "true"
ENV NEO4J_kafka_auto_offset_reset "latest"
ENV NEO4J_kafka_zookeeper_connect 10.60.48.21:2181
ENV NEO4J_kafka_bootstrap_servers 10.60.48.21:9092
ENV NEO4J_kafka_group_id "neo4j"
ENV NEO4J_kafka_client_id "neo4j"
ENV NEO4J_kafka_enable_auto_commit "false"
ENV NEO4J_kafka_key_deserializer org.apache.kafka.common.serialization.ByteArrayDeserializer
ENV NEO4J_kafka_value_deserializer org.apache.kafka.common.serialization.ByteArrayDeserializer
ENV NEO4J_streams_source_enabled "true"
ENV NEO4J_streams_source_topic_nodes_dbtest Track{*}
ENV NEO4J_streams_sink_enabled_to_dbtest "true"
ENV NEO4J_streams_sink_topic_cypher_createTrack_to_dbtest "MERGE (t:Track {id: event.id, name: event.name , duration_ms: event.duration_ms, explicit:event.explicit, artists:event.artists, danceability:event.danceability, energy:event.energy, key: event.key, loudness: event.loudness, mode: event.mode, speechiness: event.speechiness, acousticness: event.acousticness, instrumentalness: event.instrumentalness, liveness: event.liveness, valence: event.valence, tempo: event.tempo, time_signature: event.time_signature})"
ENV NEO4J_streams_sink_topic_cypher_createArtistandRel_to_dbtest "MATCH(t:Track {id: event.trackid}) MERGE (a:Artist {id: event.id, name: event.name, popularity:event.popularity, followers:event.followers, genres:event.genres}) MERGE (a)-[:produced]->(t)"
ENV NEO4J_streams_sink_topic_cypher_createGenre_to_dbtest: "MATCH (a:Artist {id:event.artistid}) MERGE (g:Genre {name:event.name}) MERGE (a)-[:belongs_to]->(g)"

CMD [ "neo4j" ]